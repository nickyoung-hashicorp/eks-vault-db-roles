#!/bin/bash
# This is the setup script for the workstation container. Use it to set the stage for your terraform training, demo, or lab.
set -e

# Allow instruqt time to do its thing
sleep 10

# Source important environment variables
mkdir -p /root/.local/share/code-server/User

# Set bash as the default shell
cat <<-EOF > /root/.local/share/code-server/User/settings.json
{
    "terminal.integrated.shell.linux": "/bin/bash",
    "terminal.integrated.fontFamily": "Inconsolata, Consolas, 'Courier New', monospace"
}
EOF

# Clone repository
git clone https://github.com/nickyoung-hashicorp/eks-vault-db-roles.git

# Set scripts as executable
cd eks-vault-db-roles/
chmod +x *.sh

# Set the user's working directory with the set-workdir script, then in subsequent challenges the user will always start in that directory.
/bin/set-workdir /root/eks-vault-db-roles

# Store our project ID as a Terraform env var
export TF_VAR_project=$INSTRUQT_GCP_PROJECT_GCP_PROJECT_PROJECT_ID
grep $INSTRUQT_GCP_PROJECT_GCP_PROJECT_PROJECT_ID /root/.bashrc || echo "export TF_VAR_project=\"$INSTRUQT_GCP_PROJECT_GCP_PROJECT_PROJECT_ID\"" >> /root/.bashrc
export GOOGLE_CREDENTIALS=$(echo $INSTRUQT_GCP_PROJECT_GCP_PROJECT_SERVICE_ACCOUNT_KEY | base64 -d | jq 'tostring')
echo "export GOOGLE_CREDENTIALS=$GOOGLE_CREDENTIALS" >> /root/.bashrc

# Export env vars for EKS
echo "export AWS_DEFAULT_REGION=us-west-2" >> ~/.bashrc
echo "export EKS_CLUSTER=eks-rds-demo"  >> ~/.bashrc

